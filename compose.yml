x-app: &default-app
  build:
    context: "."
    target: app_dev
    args:
      NODE_ENV: "development"
      UV_INSTALL_DEV: "true"
      DJANGO_DEBUG: "true"
  depends_on:
    db:
      condition: service_started
    assets:
      condition: service_started
  restart: unless-stopped
  stop_grace_period: "3s"
  tty: true
  volumes:
    - "./src:/app/src:z"
    - "/app/assets_dist"
  develop:
    watch:
        - action: rebuild
          path: ./pyproject.toml
  env_file:
    - ".env"

services:
  app:
    <<: [*default-app]
    ports:
      - "8000:8000"
    command: ["granian", "--interface", "asginl", "config.asgi:application", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    healthcheck:
      test: "${DOCKER_APP_HEALTHCHECK_TEST:-curl localhost:8000/health}"
      interval: "60s"
      timeout: "3s"
      start_period: "5s"
      retries: 3
    
  
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: "${POSTGRES_DB:-djangodb}"
      POSTGRES_USER: "${POSTGRES_USER:-djangouser}"
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "5432:5432"
    volumes:
      - "db:/var/lib/postgresql/data"
      - .:/src:cache
    restart: unless-stopped
    stop_grace_period: "3s"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  assets:
    build: 
      context: "."
      target: assets
      args:
        NODE_ENV: "development"
    env_file:
    - ".env"
    command: ["pnpm", "run", "dev"]
    ports:
      - '5173:5173'
    volumes:
      - './src:/app/src'
      - '/app/assets/node_modules'
    develop:
      watch:
        - action: rebuild
          path: ./assets/package.json
        - action: sync
          path: ./assets
          target: /app/assets
          ignore: 
            - ./assets/node_modules
  
  test:
    build:
      context: "."
      target: app_prod
      args:
        UV_INSTALL_DEV: "true"
        DJANGO_DEBUG: "false"
    depends_on:
      db:
        condition: service_started
    volumes:
    - "./src:/app/src:z"
    - "/app/assets_dist"
    env_file:
      - ".env"

volumes:
  db: {}
